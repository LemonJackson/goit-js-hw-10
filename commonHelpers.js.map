{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst startBtn = document.querySelector('[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinuts = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]')\nconst dateTime = document.querySelector(\"#datetime-picker\")\n\nconst date = new Date()\nconst dateNow = date.getTime();\nlet timeTill = 0;\nstartBtn.setAttribute('disabled', true);\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] < new Date()) {\n            return iziToast.error({\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n        }\n        startBtn.removeAttribute('disabled');\n        timeTill = selectedDates[0].getTime() - dateNow;\n\n    },\n};\n\nflatpickr(dateTime, options)\n\n\nconst addLeadingZero = value => String(value).padStart(2, 0);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n\n\n\nstartBtn.addEventListener(\"click\", onClickStart);\n\nfunction onClickStart(event) {\n\n    let timerId = setInterval(() => {\n        const { days, hours, minutes, seconds } = convertMs(timeTill)\n\n        if (timeTill < 1) {\n            clearInterval(timerId);\n            return\n        }\n        timeTill -= 1000\n\n        dataDays.textContent = addLeadingZero(days);\n        dataHours.textContent = addLeadingZero(hours);\n        dataMinuts.textContent = addLeadingZero(minutes);\n        dataSeconds.textContent = addLeadingZero(seconds);\n        startBtn.setAttribute('disabled', true);\n        dateTime.setAttribute('disabled', true);\n\n    }, 1000)\n}\n\n\n"],"names":["startBtn","dataDays","dataHours","dataMinuts","dataSeconds","dateTime","date","dateNow","timeTill","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","onClickStart","event","timerId"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAW,SAAS,cAAc,kBAAkB,EAEpDC,EAAO,IAAI,KACXC,EAAUD,EAAK,UACrB,IAAIE,EAAW,EACfR,EAAS,aAAa,WAAY,EAAI,EAEtC,MAAMS,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,GAAIA,EAAc,CAAC,EAAI,IAAI,KACvB,OAAOC,EAAS,MAAM,CAClB,QAAS,qCACT,SAAU,UAC1B,CAAa,EAELX,EAAS,gBAAgB,UAAU,EACnCQ,EAAWE,EAAc,CAAC,EAAE,QAAO,EAAKH,CAE3C,CACL,EAEAK,EAAUP,EAAUI,CAAO,EAG3B,MAAMI,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,EAE3D,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAKApB,EAAS,iBAAiB,QAASqB,CAAY,EAE/C,SAASA,EAAaC,EAAO,CAEzB,IAAIC,EAAU,YAAY,IAAM,CAC5B,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUP,CAAQ,EAE5D,GAAIA,EAAW,EAAG,CACd,cAAce,CAAO,EACrB,MACH,CACDf,GAAY,IAEZP,EAAS,YAAcY,EAAeI,CAAI,EAC1Cf,EAAU,YAAcW,EAAeK,CAAK,EAC5Cf,EAAW,YAAcU,EAAeM,CAAO,EAC/Cf,EAAY,YAAcS,EAAeO,CAAO,EAChDpB,EAAS,aAAa,WAAY,EAAI,EACtCK,EAAS,aAAa,WAAY,EAAI,CAEzC,EAAE,GAAI,CACX"}